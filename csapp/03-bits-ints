1.位操作符：x^~0xFF 保留最后一个字节，前面取反。 a^~0x00 = ~a a^0x00 = a
2.算术右移/逻辑右移 
逻辑右移，C中有符号数没有统一规范默认右移为算术右移，无符号数一定是逻辑右移。
JAVA中，>>算术右移>>>表示逻辑右移
3.负数的范围比正数大1,具有不对称性。
4.符号隐式转换。
C语言中，当一个无符号数和一个有符号数运算是，有符号数字会自动关机转换成无符号数。
xu<y 如果有一端是无符号数，会把整个当成无符号数字处理。
5.a = -5 - 1u; 这样子是当成一个整体处理（即先算出-6，在转换成无符号数）
6.size_t为unsigned int类型的。很多隐含类型转换，导致漏洞。
7.乘法消耗的时钟周期比加法和减法要多，编译器优化乘法为加法或者减法，通过左移等。
除法消耗的时钟周期最长，但不是所有的除数都能转换成2的倍数。
